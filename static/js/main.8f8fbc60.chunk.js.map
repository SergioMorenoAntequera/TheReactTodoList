{"version":3,"sources":["components/TodoContext/index.js","hooks/useLocalStorage.js","components/TodoStates/index.js","components/TodoList/index.js","components/TodoItem/index.js","components/Modal/index.js","components/Warning/index.js","components/TodoAddDialog/index.js","components/TodoCounter/index.js","components/TodoTextFilter/index.js","components/AppUI/index.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","name","defaultValue","useState","storageItem","setStorageItem","loading","setLoading","error","setError","useEffect","setTimeout","parsedLocalStorage","inLocalStorage","localStorage","getItem","JSON","parse","console","log","setItem","stringify","setLocalElement","newValue","useLocalStorage","id","done","todoList","setTodoList","filterText","setFilterText","showingAddDialog","setShowingAddDialog","todoListFiltered","textToCompare","listToCompare","filter","todo","trim","toLowerCase","includes","filterList","Provider","value","addTodo","newTodo","length","auxList","deleteTodo","todoToRemoveId","it","toggleDone","todoId","auxTodos","index","findIndex","children","TodoLoading","repeat","i","push","className","map","style","width","Math","round","random","TodoError","TodoNotFound","useContext","onClick","prev","TodoList","TodoItem","toggle","event","target","matches","closest","type","checked","onChange","Modal","ReactDOM","createPortal","document","getElementById","CustomModalDialog","setShowing","title","Warning","condition","body","button","undefined","action","text","TodoAddDialog","setNewTodo","warningMessages","setWarningMessages","textInputRef","createRef","current","select","onSubmit","preventDefault","newTodoAux","errorMessages","cases","successCB","forEach","probCase","errorMessage","check","e","ref","placeholder","message","TodoCounter","filtered","total","celeb","TodoTextFilter","inputRef","useRef","AppUI","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"gaAGMA,EAAcC,IAAMC,gBAE1B,SAASC,EAAaC,GAElB,IAUA,ECf2B,SAACC,EAAMC,GAClC,MAAsCC,mBAASD,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEA,IACIC,qBAAU,WACNC,YAAW,WACP,IACIC,EADAC,EAAiBC,aAAaC,QAAQd,GAGtCY,EAKAD,EAAqBI,KAAKC,MAAMJ,IAJhCK,QAAQC,IAAIN,GACZC,aAAaM,QAAQnB,EAAMe,KAAKK,UAAUnB,IAC1CU,EAAqBV,GAKzBG,EAAeO,GACfL,GAAW,KACZ,OACJ,IACL,MAAMC,GACJC,EAASD,GAab,MAAO,CAACJ,cAAakB,gBATG,SAACC,GACrB,IACIT,aAAaM,QAAQnB,EAAMe,KAAKK,UAAUE,IAC1ClB,EAAekB,GACjB,MAAOf,GACLC,EAASD,KAIqBF,UAASE,SDjB3CgB,CAAgB,WAfH,CACb,CAACC,GAAG,EAAGxB,KAAK,qCAA4ByB,MAAK,GAC7C,CAACD,GAAG,EAAGxB,KAAK,qBAAiByB,MAAK,GAClC,CAACD,GAAG,EAAGxB,KAAK,kCAAyByB,MAAK,GAC1C,CAACD,GAAG,EAAGxB,KAAK,iCAAwByB,MAAK,GACzC,CAACD,GAAG,EAAGxB,KAAK,6BAAoByB,MAAK,GACrC,CAACD,GAAG,EAAGxB,KAAK,6BAAoByB,MAAK,GACrC,CAACD,GAAG,EAAGxB,KAAK,gCAAuByB,MAAK,KAI3BC,EADjB,EACIvB,YACiBwB,EAFrB,EAEIN,gBACAhB,EAHJ,EAGIA,QACAE,EAJJ,EAIIA,MAGJ,EAAoCL,mBAAS,IAA7C,mBAAO0B,EAAP,KAAmBC,EAAnB,KACA,EAAgD3B,oBAAS,GAAzD,mBAAO4B,EAAP,KAAyBC,EAAzB,KAaIC,EAAmB,GAInBA,EAHAJ,EAZe,SAACK,EAAeC,GAAmB,IAAD,IAIjD,OAHAD,EAAa,UAAGA,SAAH,QAAoBL,EACjCM,EAAa,UAAGA,SAAH,QAAoBR,EAEZ,KAAlBO,EAA6B,YAAIC,GACxB,YAAOA,EAAcC,QAAO,SAAAC,GAAI,OAC5CA,EAAKpC,KAAKqC,OAAOC,cAAcC,SAASN,EAAcI,OAAOC,mBAS1CE,GAFAd,EAqBvB,OACI,cAAC/B,EAAY8C,SAAb,CAAsBC,MAAO,CACzBrC,UACAE,QACAmB,WACAM,mBACAL,cACAC,aACAC,gBACAc,QAzBQ,SAACC,GAAa,IAAD,IACzBA,EAAQpB,IAAK,oBAACE,EAASA,EAASmB,OAAS,UAA5B,aAAC,EAA+BrB,UAAhC,QAAsC,GAAK,EACxD,IAAIsB,EAAO,sBAAOpB,GAAP,CAAiBkB,IAC5BjB,EAAYmB,IAuBRC,WArBW,SAACC,GAChB,IAAIF,EAAU,YAAIpB,GAAUS,QAAO,SAAAc,GAAE,OAAEA,EAAGzB,KAAOwB,KACjDrB,EAAYmB,IAoBRI,WAlBW,SAACC,GAChB,IAAIC,EAAQ,YAAO1B,GACf2B,EAAQD,EAASE,WAAU,SAAAL,GAAE,OAAEA,EAAGzB,KAAO2B,KAC7CC,EAASC,GAAT,2BAAsBD,EAASC,IAA/B,IAAuC5B,MAAM2B,EAASC,GAAO5B,OAC7DE,EAAYyB,IAeRtB,mBACAC,uBAZJ,SAcKhC,EAAMwD,W,uBEtEnB,SAASC,IAEL,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAG,EAAGA,IAClBD,EAAOE,KAAKD,GAEhB,OAAO,qBAAKE,UAAU,cAAf,SACFH,EAAOI,KAAI,SAACH,GAAD,OACR,sBAAKE,UAAU,yBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,kBAAf,eACA,mBAAGA,UAAU,kBAAkBE,MAAO,CAACC,MAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAgB,GAAG,MAAhF,kBAEJ,sCALyCR,QAWzD,SAASS,IACL,OAAO,qBAAKP,UAAU,YAAf,SACH,+CAIR,SAASQ,IACL,MAGMC,qBAAW1E,GADboC,GAFJ,EACID,iBADJ,EAEIC,qBAGJ,OAAO,sBAAK6B,UAAU,eAAf,UACH,oBAAIA,UAAU,QAAd,+BACA,mBAAGA,UAAU,YAAb,uDACA,yBAAQA,UAAU,UACdU,QAAS,WAAKvC,GAAoB,SAAAwC,GAAI,OAAGA,MAD7C,UAEI,cAAC,IAAD,IAFJ,qB,MClCD,SAASC,EAAT,GAA+B,IAAZjB,EAAW,EAAXA,SACxB,EAA2Cc,qBAAW1E,GAA/CU,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,MAAOyB,EAAvB,EAAuBA,iBAEvB,OAAG3B,EAAiB,cAACmD,EAAD,IACjBjD,EAAgB,cAAC4D,EAAD,IACf9D,GAAuC,IAA5B2B,EAAiBa,OAExB,oBAAIe,UAAU,WAAd,SACLL,IAHoD,cAACa,EAAD,I,MCPlD,SAASK,EAAT,GAAqD,IAAjCrC,EAAgC,EAAhCA,KAAMc,EAA0B,EAA1BA,WAAYH,EAAc,EAAdA,WAE3C,SAAS2B,EAAOC,GAAQ,IAAD,KACrB,OAAGA,QAAH,IAAGA,GAAH,UAAGA,EAAOC,cAAV,aAAG,EAAeC,QAAQ,kBAC1B,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAOC,cAAV,aAAG,EAAeE,QAAQ,iBAC1B5B,EAAWd,EAAKZ,IAGlB,OACA,sBAAKoC,UAAS,mBAAiBxB,EAAKX,KAAO,OAAO,IAC9C6C,QAASI,EADb,UAEE,sBAAKd,UAAU,WAAf,UACE,uBAAOmB,KAAK,WAAWC,QAAS5C,EAAKX,KAAMwD,SAAUP,IACrD,kCAAKtC,EAAKpC,KAAV,UAGF,cAAC,IAAD,CAAY4D,UAAU,aAAaU,QAAS,WAAKvB,EAAWX,EAAKZ,U,YCd9D,SAAS0D,EAAMnF,GAClB,OACIoF,IAASC,aACLrF,EAAMwD,SACN8B,SAASC,eAAe,UAoC7B,SAASC,EAAT,GAA4D,IAA/BhC,EAA8B,EAA9BA,SAAUiC,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,MAOtD,OAAO,cAACP,EAAD,UACH,qBAAKtB,UAAU,+BAA+BU,QANlD,SAA0BK,GACnBA,EAAMC,OAAOC,QAAQ,4BACjBW,GAAYA,GAAW,IAI9B,SACI,sBAAK5B,UAAU,eAAf,YACO6B,GACC,sBAAK7B,UAAU,SAAf,UACI,mCAAM6B,EAAN,OACA,uBAAM7B,UAAU,IAAIU,QAAS,WAAKkB,GAAW,IAA7C,cAAuD,cAAC,IAAD,CAAS5B,UAAU,cAA1E,UAGR,qBAAKA,UAAU,OAAf,SACML,W,MC5Df,SAASmC,EAAS3F,GACvB,IAAO4F,EAAkC5F,EAAlC4F,UAAWF,EAAuB1F,EAAvB0F,MAAOG,EAAgB7F,EAAhB6F,KAAMC,EAAU9F,EAAV8F,OAG/B,OADgB,OAAGF,QAAH,IAAGA,KAEX,gCACN,0CAAMF,QAAN,IAAMA,IAAS,GAAf,OACA,yCAAKG,QAAL,IAAKA,IAAQ,GAAb,YAEYE,IAAXD,EACC,wBAAQvB,QAAO,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAQE,OAAzB,gBACGF,QADH,IACGA,OADH,EACGA,EAAQG,OAGX,gCAVqB,yCAAIjG,EAAMwD,SAAV,OCCpB,SAAS0C,IACZ,MAA8B/F,mBAAS,CAACsB,IAAI,EAAGxB,KAAK,GAAIyB,MAAK,IAA7D,mBAAOmB,EAAP,KAAgBsD,EAAhB,KACA,EAA8ChG,mBAAS,IAAvD,mBAAOiG,EAAP,KAAwBC,EAAxB,KACMC,EAAezG,IAAM0G,YAC3B,EAGIjC,qBAAW1E,GAHPgD,EAAR,EAAQA,QACAb,EADR,EACQA,iBACAC,EAFR,EAEQA,oBAiCR,OAPAtB,qBAAU,WAAO,IAAD,EACA,OAAZ4F,QAAY,IAAZA,GAAA,UAAAA,EAAcE,eAAd,SAAuBC,SACvBN,EAAW,2BAAItD,GAAL,IAAc5C,KAAK,MAC7BoG,EAAmB,MAEpB,CAACtE,IAEAA,EAEA,cAACyD,EAAD,CAAmBC,WAAYzD,EAAqB0D,MAAO,uBAA3D,SACI,uBAAM7B,UAAU,gBAAgB6C,SA7BxC,SAAkB9B,GACdA,EAAM+B,iBAEN,IAAIC,EAAU,eAAO/D,GACjBgE,EDHS,SAACC,EAAOC,GAE3B,IAAIF,EAAgB,GAQpB,OAPAC,EAAME,SAAQ,SAAAC,GACTA,EAASrB,WACViB,EAAcjD,KAAKqD,EAASC,iBAIJ,IAAzBL,EAAc/D,QAAgBiE,GAAWA,IACrCF,ECPmBM,CAAM,CAC1B,CAACvB,UAAuC,IAA3BgB,EAAW3G,KAAK6C,OACzBoE,aAAc,uBAGlB,CAACtB,UAAgC,QAApBgB,EAAW3G,KACpBiH,aAAc,0BACf,WACCtE,EAAQgE,GACRT,EAAW,2BAAItD,GAAL,IAAc5C,KAAK,SAGjCoG,EAAmBQ,IAaf,UACI,mBAAGhD,UAAU,QAAb,oBACA,uBAAOqB,SAnCA,SAACkC,GAChBjB,EAAW,2BAAItD,GAAL,IAAc5C,KAAKmH,EAAEvC,OAAOlC,UAmCtBA,MAAOE,EAAQ5C,KACf+E,KAAK,OAAOqC,IAAKf,EACjBgB,YAAY,0BAGnBlB,EAAgBtC,KAAI,SAACyD,EAASjE,GAC3B,OAAO,cAACqC,EAAD,CAAqBD,MAAO6B,GAAdjE,MAGzB,sBAAKO,UAAU,OAAf,UACI,wBAAQA,UAAU,YAAYmB,KAAK,SAAST,QAAS,WAAKvC,GAAoB,IAA9E,oBACA,yBAAQ6B,UAAU,UAAUmB,KAAK,SAAjC,UACI,cAAC,IAAD,IACA,mDAnBS,6B,MC1C1B,SAASwC,IAEd,MAA8ClD,qBAAW1E,GAAlD+B,EAAP,EAAOA,SAAUM,EAAjB,EAAiBA,iBAAkB3B,EAAnC,EAAmCA,QAC/BmH,EAAWxF,EAAiBa,OAC5BpB,EAAOC,EAASS,QAAO,SAAAc,GAAE,OAAEA,EAAGxB,QAAMoB,OACpC4E,EAAQ/F,EAASmB,OAEjB6E,EAAiB,GAATD,GAAchG,IAAOgG,IAAUpH,EAE3C,OAAQ,sBAAKuD,UAAS,sBAAiB8D,EAAO,QAAU,IAAhD,UACN,oBAAG9D,UAAS,eAAU8D,EAAO,QAAU,IAAvC,UAEE,iDACEjG,EAHJ,MAGagG,EACX,oDAGDD,IAAaC,GACZ,0CAAaD,EAAb,U,MCjBC,SAASG,IACd,IAAQ9F,EAAkBwC,qBAAW1E,GAA7BkC,cACF+F,EAAWC,mBAEjB,OAAQ,mCACN,uBAAMjE,UAAU,iBAAiB6C,SAAU,SAACU,GAAKA,EAAET,kBAAmBX,OAAO,GAA7E,UACE,uBAAOhB,KAAK,OAAOqC,IAAKQ,EAAU3C,SAAU,SAACkC,GAAKtF,EAAcsF,EAAEvC,OAAOlC,UACzE,cAAC,IAAD,CAAUkB,UAAU,GAAGU,QAAS,WAAKsD,EAASrB,QAAQC,iBCFrD,SAASsB,IACd,MAQIzD,qBAAW1E,GALbqC,GAHF,EACE3B,QADF,EAEEE,MAFF,EAGEyB,kBACAe,EAJF,EAIEA,WACAG,EALF,EAKEA,WACApB,EANF,EAMEA,iBACAC,EAPF,EAOEA,oBAGF,OAAQ,sBAAK6B,UAAU,QAAf,UAEN,qBAAIA,UAAU,QAAd,wBAAiC,uBAAjC,iBACA,oBAAGA,UAAU,WAAb,2CAAsD,uBAAtD,8BAEA,cAAC+D,EAAD,IACA,cAACJ,EAAD,IAEA,cAAC/C,EAAD,UACGxC,EAAiB6B,KAAI,SAAAzB,GAAI,OACxB,cAACqC,EAAD,CAAwBrC,KAAMA,EAC5Bc,WAAYA,EACZH,WAAYA,GAFCX,EAAKZ,SAOxB,wBAAQoC,UAAS,qBAAgB9B,EAAmB,OAAO,IACnDwC,QAAS,WAAKvC,GAAoB,SAAAwC,GAAI,OAAGA,MADjD,SAEE,cAAC,IAAD,MAEF,cAAC0B,EAAD,OCtCG,SAAS8B,IAEd,OACE,cAACjI,EAAD,UACE,cAACgI,EAAD,MCRN,IAYeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDd9C,IAASsD,OACP,cAAC,IAAMC,WAAP,UACE,cAACX,EAAD,MAEF1C,SAASC,eAAe,SAM1B0C,M","file":"static/js/main.8f8fbc60.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n\r\n    const defTodos = [\r\n        {id:1, name:\"📚 Features implemented:\", done:false},\r\n        {id:2, name:\"✨ React Hooks\", done:true},\r\n        {id:3, name:\"🔮 React Custom Hooks\", done:true},\r\n        {id:4, name:\"👉 React Refferences\", done:true},\r\n        {id:5, name:\"🚀 React Portals\", done:true},\r\n        {id:6, name:\"📝 React Context\", done:true},\r\n        {id:7, name:\"💖 Hope you love it\", done:false},\r\n    ]\r\n\r\n    const {\r\n        storageItem: todoList, \r\n        setLocalElement: setTodoList, \r\n        loading,\r\n        error\r\n    } = useLocalStorage(\"TODOS_V1\", defTodos)\r\n\r\n    const [filterText, setFilterText] = useState(\"\")\r\n    const [showingAddDialog, setShowingAddDialog] = useState(false)\r\n\r\n    const filterList = (textToCompare, listToCompare) => {\r\n        textToCompare = textToCompare ?? filterText;\r\n        listToCompare = listToCompare ?? todoList\r\n\r\n        if(textToCompare === \"\") return [...listToCompare]\r\n        let filtered = [...listToCompare.filter(todo => \r\n        todo.name.trim().toLowerCase().includes(textToCompare.trim().toLowerCase())\r\n        )]\r\n        return filtered;\r\n    }\r\n\r\n    let todoListFiltered = []\r\n    if(!filterText) {\r\n        todoListFiltered = todoList;\r\n    } else {\r\n        todoListFiltered = filterList()\r\n    }\r\n    \r\n    const addTodo = (newTodo) => {\r\n        newTodo.id = (todoList[todoList.length - 1]?.id ?? 1) + 1;\r\n        let auxList = [...todoList, newTodo] \r\n        setTodoList(auxList);\r\n    }\r\n    const deleteTodo = (todoToRemoveId) => {\r\n        let auxList = [...todoList].filter(it=>it.id !== todoToRemoveId) \r\n        setTodoList(auxList);\r\n    }\r\n    const toggleDone = (todoId) => {\r\n        let auxTodos = [...todoList];\r\n        var index = auxTodos.findIndex(it=>it.id === todoId)\r\n        auxTodos[index] = {...auxTodos[index], done:!auxTodos[index].done}\r\n        setTodoList(auxTodos);\r\n    }\r\n\r\n    return (\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            todoList,\r\n            todoListFiltered,\r\n            setTodoList,\r\n            filterText,\r\n            setFilterText,\r\n            addTodo,\r\n            deleteTodo,\r\n            toggleDone,\r\n            showingAddDialog,\r\n            setShowingAddDialog\r\n        }}>\r\n            {props.children}\r\n        </TodoContext.Provider>    \r\n    )\r\n}\r\n\r\nexport {TodoContext, TodoProvider}","import { useEffect, useState } from \"react\";\r\n\r\nexport const useLocalStorage = (name, defaultValue) => {\r\n    const [storageItem, setStorageItem] = useState(defaultValue)\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(\"\")\r\n\r\n    try {\r\n        useEffect(() => {\r\n            setTimeout(() => {\r\n                let inLocalStorage = localStorage.getItem(name)\r\n                let parsedLocalStorage;\r\n                \r\n                if(!inLocalStorage) {\r\n                    console.log(inLocalStorage)\r\n                    localStorage.setItem(name, JSON.stringify(defaultValue));\r\n                    parsedLocalStorage = defaultValue;\r\n                } else {\r\n                    parsedLocalStorage = JSON.parse(inLocalStorage);\r\n                }\r\n        \r\n                setStorageItem(parsedLocalStorage)\r\n                setLoading(false)\r\n            }, 1000);\r\n        }, [])\r\n    } catch(error) {\r\n        setError(error)\r\n    }\r\n    \r\n    \r\n    const setLocalElement = (newValue) => {\r\n        try {\r\n            localStorage.setItem(name, JSON.stringify(newValue))\r\n            setStorageItem(newValue)    \r\n        } catch (error) {\r\n            setError(error)\r\n        }\r\n    }\r\n    \r\n    return {storageItem, setLocalElement, loading, error}\r\n}","import React, { useContext } from 'react'\r\nimport \"./style.css\"\r\nimport { TodoContext } from '../TodoContext'\r\nimport { FaPlus } from 'react-icons/fa'\r\n\r\n\r\nfunction TodoLoading() {\r\n    let repeat = []\r\n    for (let i = 0; i <5; i++) {\r\n        repeat.push(i)\r\n    }\r\n    return(<div className='TodoLoading'> \r\n        {repeat.map((i)=>\r\n            <div className='TodoItem skeleton-dark' key={i}> \r\n                <div className='LeftPart'>\r\n                    <div className='skeleton-darker'> </div>\r\n                    <p className='skeleton-darker' style={{width:Math.round(Math.random() * 200)+50+\"px\"}}> </p> \r\n                </div>\r\n                <div> </div>\r\n            </div>\r\n        )}\r\n    </div>)\r\n}\r\n\r\nfunction TodoError() {\r\n    return(<div className='TodoError'>\r\n        <p> Oh waw wtf </p>\r\n    </div>)\r\n}\r\n\r\nfunction TodoNotFound() {\r\n    const {\r\n        showingAddDialog,\r\n        setShowingAddDialog\r\n      } = useContext(TodoContext) \r\n\r\n    return(<div className='TodoNotFound'>\r\n        <h2 className='title'> No Todo's found </h2>\r\n        <p className='sub-title'> Nothing to worry about, we can fix this </p>\r\n        <button className='primary'\r\n            onClick={()=>{setShowingAddDialog(prev=>!prev)}}>  \r\n            <FaPlus/> Add one now\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport {TodoLoading, TodoError, TodoNotFound}","import { useContext } from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport { TodoLoading, TodoError, TodoNotFound } from '../TodoStates';\r\nimport './style.css';\r\n\r\nexport function TodoList({children}) {\r\n  const {loading, error, todoListFiltered} = useContext(TodoContext)\r\n  \r\n  if(loading) return( <TodoLoading/> )\r\n  if(error) return ( <TodoError/> )\r\n  if(!loading && todoListFiltered.length === 0) return ( <TodoNotFound/> )\r\n\r\n  return (<ul className='TodoList'>\r\n    {children}    \r\n  </ul>);\r\n}","import './style.css';\r\nimport { FaTrashAlt } from \"react-icons/fa\"\r\n\r\nexport function TodoItem({ todo, toggleDone, deleteTodo }) {\r\n  \r\n  function toggle(event) {\r\n    if(event?.target?.matches(\".deleteIcon\")) return \r\n    if(event?.target?.closest(\".deleteIcon\")) return \r\n    toggleDone(todo.id)\r\n  }\r\n\r\n  return (\r\n  <div className = {`TodoItem ${ todo.done ? \"done\":\"\" }`} \r\n      onClick={toggle}> \r\n    <div className='LeftPart'>\r\n      <input type=\"checkbox\" checked={todo.done} onChange={toggle}/>\r\n      <p> {todo.name} </p> \r\n    </div>\r\n    \r\n    <FaTrashAlt className='deleteIcon' onClick={()=>{deleteTodo(todo.id)}}/> \r\n  </div>);\r\n}","import \"./style.css\"\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nexport function Modal(props) {\r\n    return (\r\n        ReactDOM.createPortal(\r\n            props.children,\r\n            document.getElementById(\"modal\")\r\n        )\r\n    )\r\n}\r\n\r\n// Multi Purpose Dialog\r\nexport function ModalDialog({\r\n        showing, \r\n        setShowing, \r\n        title, \r\n        body, \r\n        button1, \r\n        button2\r\n    }) { \r\n \r\n    if(!showing) return<></>\r\n\r\n    return(<Modal>\r\n        <div className=\"modal-dialog-container\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"header\">\r\n                    <h3> {title} </h3>\r\n                    <span className=\"x\" onClick={()=>{setShowing(false)}}> x </span>\r\n                </div>\r\n\r\n                <p> {body} </p>\r\n\r\n                <div>\r\n                    {button2 && <button onClick={button2.action}> {button2.text} </button>}\r\n                    {button1 && <button onClick={button1.action}> {button1.text} </button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Modal>);\r\n}\r\n\r\nexport function CustomModalDialog({ children, setShowing, title }){\r\n\r\n    function hideIfClickedOut(event) {\r\n        if(event.target.matches(\".modal-dialog-container\"))\r\n            if(setShowing) setShowing(false)\r\n    }\r\n\r\n    return(<Modal>\r\n        <div className=\"Modal modal-dialog-container\" onClick={hideIfClickedOut}>\r\n            <div className=\"modal-dialog\">\r\n                {!!title &&\r\n                    <div className=\"header\">\r\n                        <h3> {title} </h3>\r\n                        <span className=\"x\" onClick={()=>{setShowing(false)}}> <FaTimes className=\"closeIcon\"/> </span>\r\n                    </div>\r\n                }\r\n                <div className=\"body\">\r\n                    { children }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Modal>)\r\n}","import './style.css';\r\n\r\nexport function Warning( props ) {\r\n  const {condition, title, body, button} = props \r\n\r\n  var auxCondition = condition ?? true\r\n  if(!auxCondition) return(<> {props.children} </>)\r\n  return (<div>\r\n    <h2> {title ?? \"\"} </h2>\r\n    <p> {body ?? \"\"} </p>\r\n\r\n    {button !== undefined ?\r\n      <button onClick={button?.action}> \r\n        {button?.text} \r\n      </button>\r\n      :\r\n      <></>\r\n    }\r\n  </div>);\r\n}\r\n\r\nexport const check = (cases, successCB) => {\r\n  // cases: [{condition:Boolean, errorMesssage:String}...]\r\n  let errorMessages = [] \r\n  cases.forEach(probCase => {\r\n    if(probCase.condition) {\r\n      errorMessages.push(probCase.errorMessage);\r\n    }  \r\n  });\r\n\r\n  if(errorMessages.length === 0 && successCB) successCB()\r\n  return errorMessages;\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport \"./style.css\"\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport { CustomModalDialog } from '../Modal';\r\nimport { Warning, check } from '../Warning';\r\nimport { FaPlus } from \"react-icons/fa\";\r\n\r\nexport function TodoAddDialog() {\r\n    const [newTodo, setNewTodo] = useState({id:-1, name:\"\", done:false})\r\n    const [warningMessages, setWarningMessages] = useState([])\r\n    const textInputRef = React.createRef();\r\n    const { addTodo,\r\n            showingAddDialog, \r\n            setShowingAddDialog \r\n    } = useContext(TodoContext)\r\n        \r\n    const updateName = (e) => {\r\n        setNewTodo({...newTodo, name:e.target.value});\r\n    }\r\n    \r\n    function onSubmit(event) {\r\n        event.preventDefault()\r\n        \r\n        let newTodoAux = {...newTodo}\r\n        var errorMessages = check([\r\n        {condition: (newTodoAux.name.length === 0),\r\n            errorMessage: \"A name is required.\"},\r\n        // {condition: (newTodoAux.name === \"dick\"),\r\n        //     errorMessage: \"No ffensie word pls, my uncle and my mom sleep together\"},\r\n        {condition: (newTodoAux.name === \"pra\"),\r\n            errorMessage: \"I wonder whoa re you\"}\r\n        ], () => {\r\n            addTodo(newTodoAux)\r\n            setNewTodo({...newTodo, name:\"\"})\r\n        })\r\n\r\n        setWarningMessages(errorMessages);\r\n    }\r\n\r\n    useEffect(() => {\r\n        textInputRef?.current?.select()\r\n        setNewTodo({...newTodo, name:\"\"});\r\n        setWarningMessages([])\r\n\r\n    }, [showingAddDialog])\r\n    \r\n    if(!showingAddDialog) return(<></>)\r\n    return(\r\n        <CustomModalDialog setShowing={setShowingAddDialog} title={\"Add a new Todo to do\"}>\r\n            <form className=\"TodoAddDialog\" onSubmit={onSubmit}>\r\n                <p className=\"label\"> Name </p>\r\n                <input onChange={updateName} \r\n                        value={newTodo.name}\r\n                        type=\"text\" ref={textInputRef}\r\n                        placeholder=\"Learn React basics...\"\r\n                />\r\n\r\n                {warningMessages.map((message, index) => {\r\n                    return <Warning key={index} title={message}/>\r\n                })} \r\n\r\n                <div className=\"ctas\">\r\n                    <button className=\"secondary\" type=\"button\" onClick={()=>{setShowingAddDialog(false)}}>Cancel</button>\r\n                    <button className=\"primary\" type=\"submit\"> \r\n                        <FaPlus/> \r\n                        <div> Add </div>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </CustomModalDialog>\r\n    )\r\n}","import './style.css';\r\nimport { useContext } from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\n\r\nexport function TodoCounter() {\r\n  \r\n  const {todoList, todoListFiltered, loading} = useContext(TodoContext)\r\n  let filtered = todoListFiltered.length\r\n  let done = todoList.filter(it=>it.done).length\r\n  let total = todoList.length\r\n\r\n  let celeb = total != 0 && done===total && !loading\r\n\r\n  return (<div className={`TodoCounter ${celeb? 'celeb' : ''}`}>\r\n    <p className={`main ${celeb? 'celeb' : ''}`}> \r\n    \r\n      <span> 🎉</span>  \r\n       {done} / {total} \r\n      <span> 🎉</span>  \r\n    </p>\r\n    \r\n    {filtered !== total && \r\n      <p> Showing {filtered} </p>\r\n    }\r\n    \r\n  </div>)\r\n}","import './style.css';\r\nimport { useContext, useRef } from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nexport function TodoTextFilter() {\r\n  const { setFilterText } = useContext(TodoContext)\r\n  const inputRef = useRef()\r\n\r\n  return (<>\r\n    <form className='TodoTextFilter' onSubmit={(e)=>{e.preventDefault()}} action=\"\">\r\n      <input type=\"text\" ref={inputRef} onChange={(e)=>{setFilterText(e.target.value) }}/>\r\n      <FaSearch className='' onClick={()=>{inputRef.current.select()}}/>\r\n    </form>   \r\n  </>);\r\n}","import './style.css';\r\nimport { useContext } from 'react';\r\nimport { TodoList } from \"../TodoList\"\r\nimport { TodoItem } from '../TodoItem';\r\nimport { TodoAddDialog } from '../TodoAddDialog';\r\nimport { TodoCounter } from '../TodoCounter';\r\nimport { TodoTextFilter } from '../TodoTextFilter';\r\nimport { TodoContext } from '../TodoContext';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nexport function AppUI() {\r\n  const {\r\n    loading,\r\n    error,\r\n    todoListFiltered,\r\n    deleteTodo,\r\n    toggleDone,\r\n    showingAddDialog,\r\n    setShowingAddDialog\r\n  } = useContext(TodoContext) \r\n\r\n  return (<div className='AppUI'>\r\n\r\n    <h1 className='title'> The React <br/> Todo List </h1>\r\n    <p className='subTitle'> If you don't do a Todo List, <br/> do you even React bro? </p>\r\n\r\n    <TodoTextFilter/>\r\n    <TodoCounter/>\r\n\r\n    <TodoList>\r\n      {todoListFiltered.map(todo => \r\n        <TodoItem key={todo.id} todo={todo} \r\n          toggleDone={toggleDone}\r\n          deleteTodo={deleteTodo}\r\n        />\r\n      )}\r\n    </TodoList>\r\n\r\n    <button className={`AddNewTodo ${showingAddDialog ? 'open':''}`} \r\n            onClick={()=>{setShowingAddDialog(prev=>!prev)}}>  \r\n      <FaPlus/>\r\n    </button>\r\n    <TodoAddDialog/>\r\n\r\n  </div>);\r\n}\r\n","import './style.css';\r\nimport { TodoProvider } from '../TodoContext';\r\nimport { AppUI } from \"../AppUI\"\r\n\r\nexport function App() {\r\n\r\n  return (\r\n    <TodoProvider>\r\n      <AppUI />\r\n    </TodoProvider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './components/App/index';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}